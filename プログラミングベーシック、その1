ディープラーニングでは何かできるかなは、自分をとって一番好きなトピックです。
そのため、プログラミングは必須、Pythonのモジュールや関数の使い方は大したことでは
ありませんが、考え方は違うらしいです。

トレーニングセットは普通はm個サンプルがあり、forで処理するのは当たり前だろと、
しかし、ニューラルネットワークには、forはあまり使わなく、numpyモジュール
でデータをベクトル化するやり方が多いです。つまり、一つづつの処理ではなく、
マトリックスまたはマトリックスに変換して計算します。

次はロジスティック回帰と二項分類は登場します。
取りあえず、リンクです。
https://ja.wikipedia.org/wiki/%E3%83%AD%E3%82%B8%E3%82%B9%E3%83%86%E3%82%A3%E3%83%83%E3%82%AF%E5%9B%9E%E5%B8%B0
https://ja.wikipedia.org/wiki/%E4%BA%8C%E9%A0%85%E5%88%86%E9%A1%9E

応用問題があるので、よかったです。
猫の画像を認識しようとします。1は猫、0は猫ではない、結果（確率）のyです。
画像にはN Pixel x N Pixel x 3のマトリックスxがあります。

x　⇒　分類器　⇒　y


Pythonの話に戻りますと、下記のソースコードでマトリックスのサイズが分かれます。
X = np.array([[5, 3, 8, 9], [1, 2, 3, 4]])
X.shape

Output = (2, 4)
