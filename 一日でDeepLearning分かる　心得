MLは問題を解決するために適用できる関数を見つかるプロセスであります。
トレーニングデータを用いて、ロスを最小化すべき、最適の関数を見つけます。

基本的に、三つステップあります。
Define a set of function　⇒　Goodness of function　⇒　Pick the best function

まず、ニューラルネットワークを定義します。その中に、WeightとBiaseがありますが、全てのロスを最小化にさせるように、
一番いい値は最終の関数を決めます。

Forward：　トレーニングデータ　⇒　実値　/　関数の出力　⇒　ロス　
Backward：　ログ　⇒　w/b　※TensorFlow、Caffe、Chainerなどに任せましょう。

Forward　⇔　Backwardのプロセスを繰り返し、w/bをΔ値で修正していて、最終の関数を確定します。

Not well trained　または、Overfittingはどちらもよくありません。
だから、いくつかTipsがあります。

■適当のロス関数を選びます。
■Epoch毎バッチサイズを適当に設定します。
■適当の活性化関数を選びます。
■Learning Rate：Rateは常に同じ値ではありません。最初は大きい、だんだん小さくになります。
■Momentum

普通は、トレーニングデータとテスティングデータは違います。
ニューラルネットワークはトレーニングデータに定義されますが、
テスティングデータでいい結果を求めることは限りません。
